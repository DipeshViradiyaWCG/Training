<html lang="en">
<head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">

    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    You Are => {{current}}
    <div class="row">
        <div class="col-2"></div>
        <div class="col-3">
            <br>
            ONLINE USERS
            <br>
            <ul id="onlineusers">

            </ul>  
            <br>
            OFFLINE USERS
            <br>
            <ul id="offlineusers">

            </ul>   
        </div>
        <div class="col-4" >
            <div class="message-box">

            </div>
        </div>
        <div class="col-3"></div>
    </div>
    <a href="/logout" class="btn btn-danger">Logout</a>



    <!-- Option 1: Bootstrap Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js" integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>

    <script src="/socket.io/socket.io.js"></script>
    {{!-- <script src="https://cdn.socket.io/4.2.0/socket.io.min.js" integrity="sha384-PiBR5S00EtOj2Lto9Uu81cmoyZqR57XcOna1oAuVuIEjzj0wpqDVfD0JA9eXlRsj" crossorigin="anonymous"></script> --}}


    <script>

        let userSession = '{{{session}}}';

        var socket = io.connect('http://localhost:3051', {query : "userSession={{{session}}}", secure: true,    rejectUnauthorized: false, transports : ['websocket']});

        //Creates form for chatting
        function startChat(ele){
            jQuery(".message-box").html(`
                <h3>${ele.innerHTML}</h3>
                
                <div style="overflow-x:auto; height:500px;" id="messages-list">
                    <div id="messages">

                    </div>
                </div>
                    <input type="text" name="message" id="message" data-receiver="${ele.className.split("-")[1]}" />
                    <button id="send" class="btn-primary" onclick="sendMessage()">Send</button>`);
            socket.emit("showHistoryMessagesRequest", ele.className.split("-")[1]);
        }

        //Emits event to send message to receiver
        function sendMessage(){
            let msg = jQuery("#message").val();
            console.log(msg)
            let receiverId = jQuery('#message').data('receiver');
            console.log(receiverId);
            if (msg) {
                socket.emit('chatMessage', msg, receiverId);  
                console.log("chatMessage emit");
                jQuery("#messages").append(`<p style="color : blue; text-align:right; margin-right:15px">${msg}</p>`);
                jQuery("#message").val("");
            }
        }

        //jQuery initialization
//        $.noConflict();
//        jQuery( document ).ready(function() {
//
//        });

        //Receives chat from server
        socket.on("broadcastChat",(msgdata, senderId) => {
            console.log("Message received")
            jQuery("#messages").append(`<p>${msgdata}</p>`);
        });

        //Shows online users
        socket.on("showOnline", (arr) => {
            jQuery("#onlineusers").html("");
            for(let i = 0; i < arr.length; i++){
                console.log(arr[i].username);
                jQuery("#onlineusers").append(`<li><p class="online userid-${arr[i]._id}" style="color: green;" onclick="startChat(this)">${arr[i].username}</p></li>`);
            }
        });

        //Shows offline users
        socket.on("showOffline", (arr) => {
            jQuery("#offlineusers").html("");
            for(let i = 0; i < arr.length; i++){
                console.log(arr[i].username);
                jQuery("#offlineusers").append(`<li><p class="online userid-${arr[i]._id}" style="color: red;" onclick="startChat(this)">${arr[i].username}</p></li>`);
            }
        });

        //Shows history of communication
        socket.on("showHistoryMessagesResponse", (responseMessages) => {
            console.log("msgs received");
            console.log(responseMessages);
            jQuery("#messages").html("");
            for(let messageIndex = 0; messageIndex < responseMessages.length; messageIndex++){
                if(responseMessages[messageIndex]._sender == userSession){
                    jQuery("#messages").append(`<p style="color : blue; text-align:right; margin-right:15px;">${responseMessages[messageIndex].msgdata}</p>`);
                } else {
                    jQuery("#messages").append(`<p>${responseMessages[messageIndex].msgdata}</p>`);
                }
            }
        });

    </script>

</body>
</html>